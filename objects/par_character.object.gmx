<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>self</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables

//Image Settings
scale = 1;
depth = -5;
instance_create(x, y, camera);
view_xview = x - view_wview/2;
view_yview = y - view_hview/2;

//Weapons and Ammo
weapons[0] = instance_create(x, y, obj_ak47);
weapons[1] = instance_create(x, y, obj_shotgun);
weapons[2] = instance_create(x, y, obj_cannon);
weapons[0].player = true;
weapons[1].player = true;
weapons[2].player = true;
weapons[0].active = true;
active_weapon = 0;

/* Ammo Types
0 = Bullet
1 = Shell
2 = Explosive
3 = Energy
4 = Sniper
5 = Dark/Blood
6 = Flames
7 = Love
*/
ammo[7] = 0;
ammo[6] = 0;
ammo[5] = 0;
ammo[4] = 0;
ammo[3] = 0;
ammo[2] = 20;
ammo[1] = 20;
ammo[0] = 100;

//Character properties
spd_max = 10;
hp = 5;

//States
state_machine_init();
state_create("Stand", state_player_stand);
state_create("Move", state_player_move);
state_init("Stand");
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inherit Event
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///State Cleanup
state_cleanup();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update State
state_update();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Keyboard Detection
wKey = keyboard_check(ord('W'));
wKeyPressed = keyboard_check_pressed(ord('W'));
wKeyReleased = keyboard_check_released(ord('W'));

aKey = keyboard_check(ord('A'));
aKeyPressed = keyboard_check_pressed(ord('A'));
aKeyReleased = keyboard_check_released(ord('A'));

sKey = keyboard_check(ord('S'));
sKeyPressed = keyboard_check_pressed(ord('S'));
sKeyReleased = keyboard_check_released(ord('S'));

dKey = keyboard_check(ord('D'));
dKeyPressed = keyboard_check_pressed(ord('D'));
dKeyReleased = keyboard_check_released(ord('D'));

spaceKey = keyboard_check(vk_space);
spaceKeyPressed = keyboard_check_pressed(vk_space);
spaceKeyReleased = keyboard_check_pressed(vk_space);

lMouse = mouse_check_button(mb_left);
lMousePressed = mouse_check_button_pressed(mb_left);
lMouseReleased = mouse_check_button_released(mb_left);

jKeyPressed = keyboard_check_pressed(ord('J'));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Execute State
state_execute();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_bullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Be Hit by Bullets
if(other.create_source != "player")
{
    hp -= other.damage;
    with other
    {
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Ammo
scale = 2;
//green rectangle around the currently selected type of ammo
draw_rectangle_colour(5, 495 + 17 * scale * weapons[active_weapon].ammo_type, 65 , 500 + 12 * scale + 5 + 17 * scale * active_weapon, c_green, c_green, c_green, c_green, 0);
//bullets
draw_sprite_stretched(spr_ammo_bullet, 0, 10, 500, 5 * scale, 12 * scale);
draw_text(30, 510, ammo[0])
//shells
draw_sprite_stretched(spr_ammo_shell, 0, 10, 500 + 17 * scale, 5 * scale, 12 * scale);
draw_text(30, 510 + 17 * scale, ammo[1]);
//explosives
draw_sprite_stretched(spr_ammo_explosive, 0, 10, 500 + 2 * 17 * scale, 5 * scale, 12 * scale);
draw_text(30, 510 + 2 * 17 * scale, ammo[2]);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Self
draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
